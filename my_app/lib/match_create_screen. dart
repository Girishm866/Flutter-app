import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class MatchCreateScreen extends StatefulWidget {
  @override
  _MatchCreateScreenState createState() => _MatchCreateScreenState();
}

class _MatchCreateScreenState extends State<MatchCreateScreen> {
  final TextEditingController _matchNameController = TextEditingController();
  final TextEditingController _entryFeeController = TextEditingController();
  final TextEditingController _prizePoolController = TextEditingController();

  String _selectedGameMode = 'Solo';

  final List<String> gameModes = [
    'Solo',
    'Duo',
    'Squad',
    '1v1',
    '2v2',
    '4v4',
    'Lone Wolf 1v1',
    'Lone Wolf 2v2'
  ];

  void createMatch() async {
    if (_matchNameController.text.isEmpty ||
        _entryFeeController.text.isEmpty ||
        _prizePoolController.text.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please fill all fields')),
      );
      return;
    }

    await FirebaseFirestore.instance.collection('matches').add({
      'matchName': _matchNameController.text.trim(),
      'entryFee': int.parse(_entryFeeController.text.trim()),
      'prizePool': _prizePoolController.text.trim(),
      'gameMode': _selectedGameMode,
      'createdAt': Timestamp.now(),
    });

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('Match Created Successfully')),
    );

    _matchNameController.clear();
    _entryFeeController.clear();
    _prizePoolController.clear();
    setState(() {
      _selectedGameMode = 'Solo';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Create Match')),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            TextField(
              controller: _matchNameController,
              decoration: InputDecoration(labelText: 'Match Name'),
            ),
            TextField(
              controller: _entryFeeController,
              decoration: InputDecoration(labelText: 'Entry Fee (â‚¹)'),
              keyboardType: TextInputType.number,
            ),
            TextField(
              controller: _prizePoolController,
              decoration: InputDecoration(labelText: 'Prize Pool'),
            ),
            SizedBox(height: 16),
            DropdownButtonFormField<String>(
              value: _selectedGameMode,
              items: gameModes.map((mode) {
                return DropdownMenuItem(
                  value: mode,
                  child: Text(mode),
                );
              }).toList(),
              onChanged: (val) {
                setState(() {
                  _selectedGameMode = val!;
                });
              },
              decoration: InputDecoration(labelText: 'Select Game Mode'),
            ),
            SizedBox(height: 24),
            ElevatedButton(
              onPressed: createMatch,
              child: Text('Create Match'),
            ),
          ],
        ),
      ),
    );
  }
}
